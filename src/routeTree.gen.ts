/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ShoppingcartIndexRouteImport } from './routes/shoppingcart/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as ErrorIndexRouteImport } from './routes/error/index'
import { Route as ProductProductIdRouteImport } from './routes/product/$productId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShoppingcartIndexRoute = ShoppingcartIndexRouteImport.update({
  id: '/shoppingcart/',
  path: '/shoppingcart/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorIndexRoute = ErrorIndexRouteImport.update({
  id: '/error/',
  path: '/error/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductProductIdRoute = ProductProductIdRouteImport.update({
  id: '/product/$productId',
  path: '/product/$productId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/error': typeof ErrorIndexRoute
  '/login': typeof LoginIndexRoute
  '/shoppingcart': typeof ShoppingcartIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/error': typeof ErrorIndexRoute
  '/login': typeof LoginIndexRoute
  '/shoppingcart': typeof ShoppingcartIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/error/': typeof ErrorIndexRoute
  '/login/': typeof LoginIndexRoute
  '/shoppingcart/': typeof ShoppingcartIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/product/$productId' | '/error' | '/login' | '/shoppingcart'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/product/$productId' | '/error' | '/login' | '/shoppingcart'
  id:
    | '__root__'
    | '/'
    | '/product/$productId'
    | '/error/'
    | '/login/'
    | '/shoppingcart/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
  ErrorIndexRoute: typeof ErrorIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ShoppingcartIndexRoute: typeof ShoppingcartIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shoppingcart/': {
      id: '/shoppingcart/'
      path: '/shoppingcart'
      fullPath: '/shoppingcart'
      preLoaderRoute: typeof ShoppingcartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error/': {
      id: '/error/'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProductProductIdRoute: ProductProductIdRoute,
  ErrorIndexRoute: ErrorIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  ShoppingcartIndexRoute: ShoppingcartIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
